0. 문자열 개념
    1) 문자열을 말 그대로 문자들의 배열임
    2) 문자열은 컴퓨터 메모리 구조상에 마지막에 널(NULL)값을 포함함
        - 널(NULL)값은 문자열의 끝을 알리는 목적으로 사용됨 
        - printf() 함수 실행하면 컴퓨터는 내부적으로 NULL을 만날때까지 출력함
        - 예)  0 1 2 3 4 5 6 7 8 9 10 11
               H E L L 0   W O R L D \0 

1. 문자열 상수 
    1) 두 글자 이상을 말함.
    2) 항상 널 문자('\0')로 끝남 --> 문자열의 길이보다 항상 1byte 큼 
    3) 문자열의 길이가 가변적임 --> 크기가 클수 있기 때문에 문자열 상수가
                                  저장된 주소의 값으로 처리함 
    4) 문자열 상수가 저장된 시작주소 값을 가지고 있음.  
        - 문자열 형태로 포인터를 사용함
            - 포인터에 특정한 문자열의 주소를 넣게 됨  

2. 문자열 처리 
    1) 배열을 이용하여 문자열 처리하기 
        - C언어는 문자열을 처리하는 기본 자료형이 없음.
        - 문자열은 문자들이 모여 이루어짐 => 문자열 배열 선언
        - 예)
            char str1[6] = "Hello";                     
                 str1 -----> 'H' 'e' 'l' 'l' 'o' '\0' (문자열 단위로 초기화)     

            char str2[5] = {'H', 'e', 'l', 'l', '0'};
                 str2 -----> 'H' 'e' 'l' 'l' 'o'  (문자 단위로 초기화)
    2) 포인터를 이용하여 문자열 처리하기 
        - 문자열 상수는 메모리가 할당되면 그 문자열의 시작주소 값 리턴함 
            ==> char* 포인터 변수에 대입 가능함 ==> 단순히 가리키고만 있음
        - 포인터로 문자열을 처리하는 경우 문자열은 읽기 전용이 됨.
        - 예)
            char* str = "hello";
                                   '0x100'               '0x105'          
               str -------------->  'H' 'e' 'l' 'l' 'o' '\0'                         
              '0x100'

3. 문자열 입출력 함수
    1) scanf() 함수는 공백을 만날때까지 입력 받음,
       gets() 함수는 공백까지 포함하여 한 줄을 입력 받음.       

    2) gets_s() 함수
        - gets() 함수는 버퍼의 크기를 벗어나도 입력을 받아버림 
        - C11 표준부터는 버퍼의 크기를 철저히 지키는 gets_s() 함수 추가됨  
        - gets_s()를 이용하는 경우 범위를 넘으면 그 즉시 런타임(Runtime) 오류가
          발생하게 됨.

    3) 문자열 처리를 위한 다양한 함수
        - strlen()  
            - 문자열의 길이를 반환함 
        - strcmp()
            - 문자열 1이 문자열 2보다 사전적으로 앞에 있으면 -1, 
              뒤에 있으면 1을 반환.    
        - strcpy()
            - 문자열을 복사함 
        - strcat()
            - 문자열1에 문자열 2를 더함 

4. 문자열 처리를 위한 다양한 함수
    1) C 언어의 문자열 처리와 관련해서 기본적인 문자열 함수를 알고 있는것이 좋음
    2) 나중에 C++을 이용하면 더욱 간편하고 다양한 함수 사용 할수 있음
    3) C언어에서의 문자열 함수는 <string.h> 라이브러리에 포함되어 있음.                                                                    