1. C++의 연산자 오버로딩(Overloading)
    1) 연산자는 함수 형태로 구현 - 연산자 함수(operator function)
    2) 반드시 클래스와 관계를 가짐 
    3) 몇몇 연산자는 오버로딩(중복 정의) 처리 불가
        - .(멤버 연산자),  :: (범위지정연산자), ? : (3항 연산자)

2. 연산자 함수 구현 방법 
    1) 클래스의 멤버 함수로 구현
    2) 외부 함수로 구현하고 클래스에 프랜드 함수로 선언

3. 연산자 함수 형식
        리턴타입 operator연산자(매개변수) 

4. 프렌드 (캡슐화 기법)         
    1) 기본적으로 멤버 변수에 접근하기 위해서 public 멤버 함수를 이용해야 함.
    2) 특정한 객체의 멤버 함수가 아닌 경우에도 private 멤버에 접근해야 할 때가 있음.
        - 프렌드(friend) 키워드를 이용하면 특정한 객체의 모든 멤버변수에 접근 가능.
    3) 프렌드 함수 
        - 클래스의 멤버 함수가 아닌 외부 함수 
            - 전역 함수
            - 다른 클래스의 멤버 함수 
        - friend 키워드로 클래스 내에 선언 
            - 클래스의 모든 멤버를 접근할 수 있는 권한 부여 
            - 프렌드 함수라 부름 
        - 클래스가 전체가 아닌 특정 함수에만 접근을 예외적으로 허용
            - 객체지향에 위배되기 때문에 가급적 사용하지 않는 것이 원칙임.
    4) 프렌드 클래스
        - 외부에서 접근이 불가한 private, protected 멤버의 접근을
          예외적으로 허용하는 클래스  
        - friend 키워드를 사용해서 프렌드 클래스로 등록                              